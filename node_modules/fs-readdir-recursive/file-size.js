var fs = require('fs')
var path = require('path')

function read(root, filter, prefix, depth = 0) {
  var files = [];
  prefix = prefix || ''
  filter = filter || (it => true)

  var dir = path.join(root, prefix)
  if (!fs.existsSync(dir)) return files;
  // do not recure symbolLink file
  const stat = fs.lstatSync(dir);
  if (stat.isDirectory()) {
    depth++;
    const children = fs.readdirSync(dir).filter(function (name, index) {
      return filter(name, index, dir)
    }).map(name => read(root, filter, path.join(prefix, name), depth));
    return {
      file: prefix.length > 0 ? `${prefix}/` : '',
      size: (Array.isArray(children) && children.length > 0) ? children.reduce((sum, it) => sum + it.size, 0) : 0,
      children,
      depth: --depth
    };
  } else {
    return {
      file: prefix,
      size: stat.size,
      depth,
    }
  }
}

module.exports = read;
