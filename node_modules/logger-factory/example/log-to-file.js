const loggerFactory = require('../');
const loggerA = loggerFactory('logger:A');
const loggerB = loggerFactory('logger:B');

const fs = require('fs');
const path = require('path');
const filePath = path.resolve(__dirname, 'out.file');

loggerFactory.getState().setConfigs({
  debug: 'logger:*',
  useColors: true,       // false
  toFile: path.resolve(__dirname, 'logger'),
  maxSize: 1024 * 1024 * 16,
  maxCount: 10,
});

class LoggerUsage {
  constructor() {}

  async userA() {
    while (true) {
      await new Promise(resolve => setTimeout(resolve, 10));
      loggerA('doing lots of uninteresting work');
    }
  }

  async userB() {
    while (true) {
      await new Promise(resolve => setTimeout(resolve, 50));
      loggerB('doing something');
    }
  }

  startWork() {
    this.userA();
    this.userB();
  }
}

const obj = new LoggerUsage();
obj.startWork();